{"version":3,"file":"component---src-pages-404-js-7277019698e2a0a19f09.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/layout.module.scss","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var column = \"layout-module--column--a7f9e\";","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as styles from \"./layout.module.scss\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <>\n      <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n        <div className={styles.column}>\n          <header className={`${styles.header} global-header`}>{header}</header>\n          <main className={styles.main}>{children}</main>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nexport const Seo = props => {\n  const {\n    pageTitle,\n    pageExcerpt,\n    pagePath,\n    pageType,\n    pageImage,\n    pageImageW,\n    pageImageH,\n  } = props\n  const {\n    site: {\n      siteMetadata: {\n        siteTitle,\n        siteDescription,\n        siteUrl,\n        facebookID,\n        twitter,\n        siteLang,\n        siteLocale,\n        siteOgpImg,\n        siteOgpImgW,\n        siteOgpImgH,\n      },\n    },\n    file: { publicURL },\n  } = useStaticQuery(graphql`\n    query SeoQuery {\n      site {\n        siteMetadata {\n          siteTitle\n          siteDescription\n          siteUrl\n          facebookID\n          twitter\n          siteLang\n          siteLocale\n          siteOgpImg\n          siteOgpImgW\n          siteOgpImgH\n        }\n      }\n      file(name: { eq: \"ogp\" }) {\n        publicURL\n      }\n    }\n  `)\n  /*-- langの設定 --*/\n  const lang = siteLang || `ja`\n  /*-- タイトルの設定 --*/\n  const metaTitle = pageTitle ? pageTitle + \"｜\" + siteTitle : siteTitle\n  /*-- 説明文の設定 --*/\n  const metaDescription = pageExcerpt\n    ? pageExcerpt.length > 120\n      ? pageExcerpt.slice(0, 120) + \"...\"\n      : pageExcerpt\n    : siteDescription\n  /*-- ページURLの設定 --*/\n  const metaUrl = pagePath ? `${siteUrl}${pagePath}` : `${siteUrl}`\n  /*-- サイトのtypeの設定 --*/\n  const metaType = pageType ? pageType : `article`\n  /*-- OGP画像の設定 --*/\n  let metaOgpImg = publicURL ? `${siteUrl}${publicURL}` : null\n  let metaOgpImgW = 1200\n  let metaOgpImgH = 630\n\n  if (pageImage) {\n    metaOgpImg = `${siteUrl}${pageImage}`\n    if (pageImageW && pageImageH) {\n      metaOgpImgW = pageImageW\n      metaOgpImgH = pageImageH\n    }\n  }\n\n  return (\n    <>\n      <html lang={lang} />\n      {/* ページのタイトルや説明文、canical */}\n      <title>{metaTitle}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <link rel=\"canonical\" href={metaUrl} />\n      {/* OGP */}\n      <meta property=\"og:type\" content={metaType} />\n      <meta property=\"og:title\" content={metaTitle} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:url\" content={metaUrl} />\n      <meta property=\"og:image\" content={metaOgpImg} />\n      <meta property=\"og:image:width\" content={metaOgpImgW} />\n      <meta property=\"og:image:height\" content={metaOgpImgH} />\n      <meta property=\"og:site_name\" content={siteTitle} />\n      <meta property=\"og:locale\" content={siteLocale} />\n      <meta property=\"fb:app_id\" content={facebookID} />\n      {/* twitter */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={twitter} />\n      <meta name=\"twitter:site\" content={twitter} />\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\n\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <div className=\"blog-post\">\n        <header>\n          <h1>404: Not Found</h1>\n        </header>\n        <p>ここは静かで心地がいいですよ。</p>\n      </div>\n    </Layout>\n  )\n}\n\nexport const Head = ({ location }) => {\n\n  return (\n    <>\n      <Seo\n        pagePath={location.pathname}\n      />\n      <link rel=\"stylesheet\" href=\"https://use.typekit.net/zax1sns.css\"></link>\n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@100;300;400;800;900&family=Shippori+Mincho:wght@700&display=swap\"\n        rel=\"stylesheet\"\n      ></link>\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"180x180\"\n        href=\"/icon/apple-touch-icon.png\"\n      />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        sizes=\"32x32\"\n        href=\"/icon/favicon-32x32.png\"\n      />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        sizes=\"16x16\"\n        href=\"/icon/favicon-16x16.png\"\n      />\n      <link rel=\"manifest\" href=\"/icon/site.webmanifest\" />\n      <link\n        rel=\"mask-icon\"\n        href=\"/icon/safari-pinned-tab.svg\"\n        color=\"#000000\"\n      />\n      <meta name=\"msapplication-TileColor\" content=\"#2d89ef\" />\n      <meta name=\"theme-color\" content=\"#ffffff\" />\n    </>\n  )\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["column","_ref","location","title","children","isRootPath","pathname","header","React","className","Link","to","styles","props","pageTitle","pageExcerpt","pagePath","pageType","pageImage","pageImageW","pageImageH","site","siteMetadata","siteTitle","siteDescription","siteUrl","facebookID","twitter","siteLang","siteLocale","siteOgpImg","siteOgpImgW","siteOgpImgH","file","publicURL","useStaticQuery","lang","metaTitle","metaDescription","length","slice","metaUrl","metaType","metaOgpImg","metaOgpImgW","metaOgpImgH","name","content","rel","href","property","Head","_ref2","Seo","crossorigin","sizes","type","color","data","Layout"],"sourceRoot":""}